{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyDevWork\\\\meeting-scheduler\\\\client\\\\src\\\\components\\\\MeetingList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeetingList = () => {\n  _s();\n  const [meetings, setMeetings] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Toplantıları localStorage'dan alır ve state'e yükler\n    const savedMeetings = JSON.parse(localStorage.getItem('meetings') || '[]');\n    setMeetings(savedMeetings);\n  }, []);\n\n  // Görüşmeyi Başlat butonuna basıldığında video görüşme sayfasına yönlendirir\n  const handleStartMeeting = meetingId => {\n    navigate(`/videochat/${meetingId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Toplant\\u0131lar\\u0131m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), meetings.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n        children: meetings.map(meeting => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `ID: ${meeting.id} - ${meeting.date} ${meeting.time}`,\n            secondary: `Eğitmen: ${meeting.instructor}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleStartMeeting(meeting.id),\n            children: \"G\\xF6r\\xFC\\u015Fmeyi Ba\\u015Flat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this)]\n        }, meeting.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Hen\\xFCz planlanm\\u0131\\u015F bir toplant\\u0131n\\u0131z yok.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(MeetingList, \"WwO6z6gQncQ4qvoWEj1sW5MAjd8=\", false, function () {\n  return [useNavigate];\n});\n_c = MeetingList;\nexport default MeetingList;\nvar _c;\n$RefreshReg$(_c, \"MeetingList\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","List","ListItem","ListItemText","Button","useNavigate","jsxDEV","_jsxDEV","MeetingList","_s","meetings","setMeetings","navigate","savedMeetings","JSON","parse","localStorage","getItem","handleStartMeeting","meetingId","maxWidth","children","sx","mt","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","map","meeting","display","justifyContent","primary","id","date","time","secondary","instructor","color","onClick","_c","$RefreshReg$"],"sources":["C:/MyDevWork/meeting-scheduler/client/src/components/MeetingList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Box, Typography, List, ListItem, ListItemText, Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MeetingList = () => {\r\n    const [meetings, setMeetings] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Toplantıları localStorage'dan alır ve state'e yükler\r\n        const savedMeetings = JSON.parse(localStorage.getItem('meetings') || '[]');\r\n        setMeetings(savedMeetings);\r\n    }, []);\r\n\r\n    // Görüşmeyi Başlat butonuna basıldığında video görüşme sayfasına yönlendirir\r\n    const handleStartMeeting = (meetingId) => {\r\n        navigate(`/videochat/${meetingId}`);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Box sx={{ mt: 4, textAlign: 'center' }}>\r\n                <Typography variant=\"h5\">Toplantılarım</Typography>\r\n                {meetings.length > 0 ? (\r\n                    <List>\r\n                        {meetings.map((meeting) => (\r\n                            <ListItem key={meeting.id} sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <ListItemText\r\n                                    primary={`ID: ${meeting.id} - ${meeting.date} ${meeting.time}`}\r\n                                    secondary={`Eğitmen: ${meeting.instructor}`}\r\n                                />\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => handleStartMeeting(meeting.id)}\r\n                                >\r\n                                    Görüşmeyi Başlat\r\n                                </Button>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                ) : (\r\n                    <Typography variant=\"body1\">Henüz planlanmış bir toplantınız yok.</Typography>\r\n                )}\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MeetingList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}